{"ast":null,"code":"'use strict';\n/**\n * Encapsulates the logic for issuing a request to the Stripe API. This is an\n * experimental interface and is not yet stable.\n */\n\nlet HttpClient = /*#__PURE__*/(() => {\n  class HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n      throw new Error('getClientName not implemented.');\n    }\n\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n      throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n\n\n    static makeTimeoutError() {\n      const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n      timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n      return timeoutErr;\n    }\n\n  }\n\n  HttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\n  return HttpClient;\n})();\n\nclass HttpClientResponse {\n  constructor(statusCode, headers) {\n    this._statusCode = statusCode;\n    this._headers = headers;\n  }\n\n  getStatusCode() {\n    return this._statusCode;\n  }\n\n  getHeaders() {\n    return this._headers;\n  }\n\n  getRawResponse() {\n    throw new Error('getRawResponse not implemented.');\n  }\n\n  toStream(streamCompleteCallback) {\n    throw new Error('toStream not implemented.');\n  }\n\n  toJSON() {\n    throw new Error('toJSON not implemented.');\n  }\n\n}\n\nmodule.exports = {\n  HttpClient,\n  HttpClientResponse\n};","map":null,"metadata":{},"sourceType":"script"}